//
//  RightsAndObligationsPage.swift
//  Asar
//
//  Created by Бексултан Нурпейс on 10.06.2022.
//

import UIKit

class RightsAndObligationsPage: UIViewController {

    private let items: [CellConfigurator] = [
        ServiceCellConfigurator(item: ServiceModel(
            conflabel: "Права и обязанности Пользователя и Посетителя",
            firstlabel: "Посетитель имеет право: просматривать аудиовизуальные произведения, фотографий, прослушивать фонограммы, размещенные Пользователями, доступные для такого просмотра и прослушивания в соответствии с настоящим Соглашением; использовать иные сервисы, доступ к которым предоставлен ему Компанией в лице Администрации.",
            secondlabel: "Пользователь дополнительно имеет право: создавать Заявки и выбирать Специалиста; направлять жалобы Администрации по фактам нарушения Пользователями Соглашения; использовать иные сервисы, доступ к которым предоставлен ему Компанией в лице Администрации;",
            thirdlabel: " Специалист дополнительно имеет право: исполнять Заявки всех видов; использовать иные Сервисы, доступ к которым предоставлен ему Компанией в лице Администрации.",
            fourthlabel: "Пользователю запрещается: регистрироваться в качестве Пользователя от имени или вместо другого лица («фиктивная анкета»); вводить Пользователей в заблуждение относительно своей личности, используя Логин и Пароль другого зарегистрированного Пользователя;искажать сведения о себе, своем возрасте или своих отношениях к другим организациям;загружать, хранить, публиковать, распространять и предоставлять доступ или иным образом использовать любую информацию, которая: содержит угрозы, дискредитирует, оскорбляет, порочит честь и достоинство или деловую репутацию или нарушает неприкосновенность частной жизни других Пользователей или третьих лиц; нарушает права несовершеннолетних лиц; является вульгарной или непристойной, оскорбительной, содержит порнографические изображения и тексты или сцены сексуального характера с участием несовершеннолетних; содержит сцены бесчеловечного обращения с животными; содержит описание средств и способов суицида, любое подстрекательство к его совершению; пропагандирует и/или способствует разжиганию расовой, религиозной, этнической ненависти или вражды, пропагандирует фашизм или идеологию расового превосходства; содержит экстремистские материалы; пропагандирует преступную деятельность или содержит советы, инструкции или руководства по совершению преступных действий, содержит информацию ограниченного доступа, включая, но не ограничиваясь, государственной и коммерческой тайной, информацией о частной жизни третьих лиц; содержит рекламу или описывает привлекательность употребления наркотических веществ, в том числе «цифровых наркотиков» (звуковых файлов, оказывающих воздействие на мозг человека за счет бинауральных ритмов), информацию о распространении наркотиков, рецепты их изготовления и советы по употреблению; носит мошеннический характер; а также нарушает иные права и интересы граждан и юридических лиц или требования законодательства Республики Казахстан;незаконно загружать, хранить, публиковать, распространять и предоставлять доступ или иным образом использовать интеллектуальную собственность Пользователей и третьих лиц;",
            fifthlabel: "использовать программное обеспечение и осуществлять действия, направленные на нарушение нормального функционирования Интернет-ресурса или персональных страниц Пользователей;",
            sixlabel: "любым способом, в том числе, но не ограничиваясь, путем обмана, злоупотребления доверием, взлома, пытаться получить доступ к Логину и Паролю другого Пользователя;",
            seventhlabel: "осуществлять незаконные сбор и обработку персональных данных других лиц;",
            eightslabel: "размещать любую другую информацию, которая, по личному мнению, Администрации Компании, является нежелательной, не соответствует целям создания Интернет-ресурса, ущемляет интересы Пользователей или по другим причинам является нежелательной для размещения на Интернет-ресурсе."
        ))
    ]
    
    private let tableView: UITableView = {
        let tableView = UITableView()
        tableView.backgroundColor = .systemGray6
        tableView.separatorStyle = .none
        return tableView
    }()

    private lazy var tableDirector: TableDirector = {
          let tableDirector = TableDirector(tableView: tableView, items: items)
          return tableDirector
      }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        tableDirector.tableView.reloadData()
        view.backgroundColor = .systemGray6
        setupLayouts()
    }
    
    private func setupLayouts(){
        view.addSubview(tableView)
        tableView.snp.makeConstraints {
            $0.edges.equalTo(view.safeAreaLayoutGuide)
        }
    }
    
 
    
}

